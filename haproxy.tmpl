global
        log /dev/log    local2 debug
        maxconn 3072
        tune.ssl.default-dh-param 2048

        # Default SSL material locations
       ca-base /etc/ssl/certs
       crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
       ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
       ssl-default-bind-options no-sslv3

defaults
        log     global
        mode    http
        option forwardfor
        option http-server-close
        option  httplog
        # option        dontlognull
        # option        dontlog-normal
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /usr/local/etc/haproxy/errors/400.http
        errorfile 403 /usr/local/etc/haproxy/errors/403.http
        errorfile 408 /usr/local/etc/haproxy/errors/408.http
        errorfile 500 /usr/local/etc/haproxy/errors/500.http
        errorfile 502 /usr/local/etc/haproxy/errors/502.http
        errorfile 503 /usr/local/etc/haproxy/errors/503.http
        errorfile 504 /usr/local/etc/haproxy/errors/504.http

frontend services-frontend
    # Comment next line to fully close port 88
    bind :88
    bind :443 ssl crt /etc/ssl/certs/device.pem
    # Uncomment next line to enforce https connection
    #redirect scheme https if !{ ssl_fc }
    # Always keep the next line to prevent falling back to http during redirection (HTTP-302, no trailing slash) when using https
    rspirep ^Location:\ http://(.*)  Location:\ https://\1  if { ssl_fc }
    acl url_mgs path_beg /mgs
    acl url_sts path_beg /sts
    acl url_ru path_beg /result-upload
    use_backend mgs-backend if url_mgs
    use_backend sts-backend if url_sts
    use_backend result-upload-service-backend if url_ru

frontend ui-frontend
    bind :80
    rspirep ^Location:\ http://(.*)  Location:\ https://\1  if { ssl_fc }
    use_backend ui-backend


backend mgs-backend
{{range gets "/skydns/local/skydns/mgs/*"}}
{{$data := json .Value}}
    server {{$data.host}}:{{$data.port}} {{$data.host}}:{{$data.port}} check
{{end}}

backend sts-backend
{{range gets "/skydns/local/skydns/sts/*"}}
{{$data := json .Value}}
    server {{$data.host}}:{{$data.port}} {{$data.host}}:{{$data.port}} check
{{end}}

backend result-upload-service-backend
{{range gets "/skydns/local/skydns/result-upload-service/*"}}
{{$data := json .Value}}
    server {{$data.host}}:{{$data.port}} {{$data.host}}:{{$data.port}} check
{{end}}

backend ui-backend
{{range gets "/skydns/local/skydns/grafana-preconfigured/*"}}
{{$data := json .Value}}
    server {{$data.host}}:{{$data.port}} {{$data.host}}:{{$data.port}} check
{{end}}


listen stats
   # Uncomment next line to access stats over https
   #bind :1936 ssl crt device.pem
   # Comment next line to access stats only over https
   bind :1936
   stats enable
   stats uri /
   stats realm Haproxy\ Statistics
   stats auth admin:admin

